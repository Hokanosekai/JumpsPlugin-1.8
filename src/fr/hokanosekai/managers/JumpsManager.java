package fr.hokanosekai.managers;import fr.hokanosekai.Jumps;import fr.hokanosekai.utils.Blocks;import fr.hokanosekai.utils.FileU;import fr.hokanosekai.utils.Jump;import org.bukkit.Bukkit;import org.bukkit.Location;import org.bukkit.Material;import org.bukkit.configuration.file.FileConfiguration;import java.util.HashMap;import java.util.List;public class JumpsManager {    Jumps plugin = Jumps.getInstance();    Blocks start = new Blocks(plugin);    FileU jumpFile = plugin.getJumpFile();    FileConfiguration jumpConfig = jumpFile.getConfig("Jumps");    public static HashMap<String,Jump> jumps = new HashMap<String, Jump>();    public JumpsManager(){}    public void createJump(String jump, Location loc){        Jump j = new Jump(jump);        jumps.put(jump,j);        HashMap<String, Double> coords = new HashMap<>();        coords.put("x",Math.floor(loc.getX()));        coords.put("y",Math.floor(loc.getY()));        coords.put("z",Math.floor(loc.getZ()));        j.addCoordonnees(coords);        jumpFile.createFile("Jumps");        jumpConfig.set("jumps."+jump.toLowerCase(), j.getCoordonnees());        jumpFile.save(jumpFile.getFile("Jumps"), jumpConfig);        start.setBlock(Math.floor(loc.getX()),Math.floor(loc.getY())-1,Math.floor(loc.getZ()),Material.DIAMOND_BLOCK);    }    public void addCheckPoint(String jump, Location loc){        Jump j = jumps.get(jump);        HashMap<String, Double> coords = new HashMap<>();        coords.put("x",Math.floor(loc.getX()));        coords.put("y",Math.floor(loc.getY()));        coords.put("z",Math.floor(loc.getZ()));        j.addCoordonnees(coords);        Bukkit.getLogger().info(String.valueOf(j.getCoordonnees()));        jumpConfig.set("jumps."+jump.toLowerCase(), j.getCoordonnees());        jumpFile.save(jumpFile.getFile("Jumps"), jumpConfig);        start.setBlock(Math.floor(loc.getX()),Math.floor(loc.getY()),Math.floor(loc.getZ()),Material.GOLD_PLATE);    }    public void removeCheckPoint(String jump, Location loc){        Bukkit.broadcastMessage(String.valueOf(jumps.get("test").getCoordonnees()));        /*double[] coords = new double[]{Math.ceil(loc.getX()), Math.ceil(loc.getY()), Math.ceil(loc.getZ())};        jumps.get(jump).removeCoordonnees(coords);        jumpConfig.set(jump.toLowerCase(), jumps.get(jump).getCoordonnees());        jumpFile.save(jumpFile.getFile("Jumps"), jumpConfig);*/    }}