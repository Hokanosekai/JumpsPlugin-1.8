package fr.hokanosekai;import fr.hokanosekai.commands.AddCheckPoint;import fr.hokanosekai.commands.CreateJump;import fr.hokanosekai.commands.RemoveCheckPoint;import fr.hokanosekai.listeners.PlayerListener;import fr.hokanosekai.managers.JumpsManager;import fr.hokanosekai.utils.FileU;import fr.hokanosekai.utils.Jump;import org.bukkit.Bukkit;import org.bukkit.configuration.ConfigurationSection;import org.bukkit.configuration.file.FileConfiguration;import org.bukkit.plugin.java.JavaPlugin;import java.util.HashMap;import java.util.List;import java.util.Map;public class Jumps extends JavaPlugin {    private static Jumps instance;    FileU jumpFile = new FileU(this);    FileConfiguration jumpConfig = jumpFile.getConfig("Jumps");    @Override    public void onEnable() {        instance = this;        jumpFile.createFile("Jumps");        Bukkit.getPluginManager().registerEvents(new PlayerListener(), this);        this.getCommand("CreateJump").setExecutor(new CreateJump());        this.getCommand("AddCheckPoint").setExecutor(new AddCheckPoint());        this.getCommand("RemoveCheckPoint").setExecutor(new RemoveCheckPoint());        setYMLInJumpsList();    }    @Override    public void onDisable() {    }    public static Jumps getInstance(){        return instance;    }    public FileU getJumpFile(){        return jumpFile;    }    public void setYMLInJumpsList(){        ConfigurationSection configurationSection = jumpConfig.getConfigurationSection("jumps");        if (configurationSection != null) {            for (String key : configurationSection.getKeys(false)) {                Jump j = new Jump(key);                List<Map<?, ?>> coords = jumpConfig.getMapList("jumps." + key);                if (!coords.isEmpty()) {                    for (Map v : coords) {                        Bukkit.getLogger().info(String.valueOf(v));                        j.addCoordonnees((HashMap<String, Double>) v);                    }                    Bukkit.getLogger().info(j.getName());                    JumpsManager.jumps.put(key, j);                }            }        }    }}